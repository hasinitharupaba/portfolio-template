import Head from 'next/head'
import { Inter } from '@next/font/google'
import { Header } from 'components/Header'
import { Footer } from 'components/Footer'
import { Banner } from 'components/atoms/Banner'
import { Button } from 'components/Button'
import { useState } from 'react'
import { PortfolioWeddings } from 'components/PortfolioWeddings'
import { SectionHeading } from 'components/atoms/SectionHeading'
import { DropdownMenu } from 'components/DropdownMenu'
import useViewport from 'utils/useViewport'
import { portfolio } from 'config/data'

const inter = Inter({ subsets: ['latin'] })

export default function About(onChange: any) {
  const [activeTab, setActiveTab] = useState<string>('wedding')

  const handleChange = (tab: any) => {
    onChange && setActiveTab(tab)
  }

  /* Get tabs */
  const getTabs = () => {
    const filterTabsList = portfolio?.map(({ shootType }: any) => {
      return shootType
    })

    const uniques: any = [...new Set(filterTabsList)]

    return uniques?.map((tabItem: any, index: number) => {
      return (
        <Button
          key={index}
          appearance={activeTab === tabItem ? 'active' : 'primary'}
          label={tabItem}
          className='!w-[260px]'
          onClick={() => handleChange(tabItem)}
        />
      )
    })
  }

  /* Get dropdown */
  const getDropdown = () => {
    const filterDropdownList = portfolio?.map(({ shootType }: any) => {
      return shootType
    })

    const uniques: any = [...new Set(filterDropdownList)]

    return (
      <DropdownMenu
        list={uniques}
        className='w-full md:w-[200px]'
        onChange={(e: any) => {
          e.stopPropagation()
          handleChange(e.target.value)
        }}
      />
    )
  }

  /* Get content */
  const getContent = (type: string) => {
    const filterData = portfolio?.filter((item: any) => item?.shootType === type)

    if (type) {
      return <PortfolioWeddings data={filterData} />
    } else {
      return <PortfolioWeddings data={portfolio} />
    }
  }

  const { isMobile, isDesktop, isTablet } = useViewport()

  return (
    <>
      <Head>
        <title>Portfolio</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/icon.svg' />
      </Head>
      <div className=''>
        <Header />

        <Banner
          image='/carousel/7.webp'
          heading='The art of storytelling'
          description='A collection of stories'
        />

        <div className='container py-[40px] lg:py-[80px]'>
          <SectionHeading
            heading='Portfolio'
            description='With years of experience, we capture the beauty of lifestyle celebrations across the country.'
          />

          {(isMobile || isTablet) && (
            <div className='container flex py-[20px] justify-center'>{getDropdown()}</div>
          )}

          {isDesktop && (
            <div className='container flex lg:gap-[32px] py-[32px] justify-center md:pt-[60px] md:pb-[80px]'>
              {getTabs()}
            </div>
          )}

          <div className='w-full'>{getContent(activeTab)}</div>
        </div>

        <Footer />
      </div>
    </>
  )
}
